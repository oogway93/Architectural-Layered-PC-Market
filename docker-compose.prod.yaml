services:
  app:
    container_name: app
    build:
      dockerfile: ./deploy/app/DockerFile.prod
    depends_on:
      - postgres
      - redis
    networks:
      - db_net
    ports:
      - "8000:8000"
    env_file:
      - .env.production
    restart: on-failure

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    networks:
      - db_net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 3
    env_file:
      - ".env.production"

  redis:
    image: redis
    container_name: redis
    ports:
      - "6378:6379"
    volumes:
      - redis:/data
    networks:
      - db_net
    command: /bin/sh -c "redis-server --requirepass redis"
    # command: >
    #   sh -c '
    #     mkdir -p /usr/local/etc/redis &&
    #     echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
    #     echo "requirepass $REDIS_PASSWORD" >> /usr/local/etc/redis/redis.conf &&
    #     echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
    #     echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
    #     echo "user default on nopass ~* +@all" > /usr/local/etc/redis/users.acl &&
    #     redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
    #   '
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    # environment:
    #   - REDIS_PASSWORD=${REDIS_PASSWORD}
    #   - REDIS_USER=${REDIS_USER}
    env_file:
      - .env.production

  nginx:
    container_name: nginx
    build:
      context: ./deploy/nginx/
      dockerfile: DockerFile
    ports:
      - "80:80"
    depends_on:
      - app
    networks:
      - db_net

volumes:
  postgres:
    driver: local
  redis:
    driver: local
  nginx:

networks:
  db_net:
